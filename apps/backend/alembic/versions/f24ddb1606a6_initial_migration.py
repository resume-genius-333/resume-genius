"""Initial migration

Revision ID: f24ddb1606a6
Revises: 
Create Date: 2025-08-10 16:31:44.384051

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f24ddb1606a6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.Column('skill_category', sa.Enum('PROGRAMMING_LANGUAGE', 'FRAMEWORK', 'DATABASE', 'TOOL', 'CLOUD', 'SOFT_SKILL', 'DOMAIN', 'OTHER', name='skillcategory'), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skills')),
    sa.UniqueConstraint('skill_name', name=op.f('uq_skills_skill_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('name_prefix', sa.String(), nullable=True),
    sa.Column('name_suffix', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('linkedin_url', sa.String(), nullable=True),
    sa.Column('github_url', sa.String(), nullable=True),
    sa.Column('portfolio_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('educations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('degree', sa.Enum('HIGH_SCHOOL', 'ASSOCIATE', 'BACHELOR', 'MASTER', 'DOCTORATE', 'PROFESSIONAL', 'CERTIFICATE', 'DIPLOMA', 'OTHER', name='degreetype'), nullable=False),
    sa.Column('field_of_study', sa.String(), nullable=False),
    sa.Column('focus_area', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('max_gpa', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_educations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_educations'))
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('project_url', sa.String(), nullable=True),
    sa.Column('repository_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_projects_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_table('user_skills',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('proficiency_level', sa.Enum('BEGINNER', 'ELEMENTARY', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='proficiencylevel'), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name=op.f('fk_user_skills_skill_id_skills')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_skills_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'skill_id', name=op.f('pk_user_skills'))
    )
    op.create_table('work_experiences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('position_title', sa.String(), nullable=False),
    sa.Column('employment_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'FREELANCE', 'INTERNSHIP', 'VOLUNTEER', 'OTHER', name='employmenttype'), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_work_experiences_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work_experiences'))
    )
    op.create_table('project_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_tasks_project_id_projects')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_project_tasks_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_tasks'))
    )
    op.create_table('work_responsibilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('work_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_work_responsibilities_user_id_users')),
    sa.ForeignKeyConstraint(['work_id'], ['work_experiences.id'], name=op.f('fk_work_responsibilities_work_id_work_experiences')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work_responsibilities'))
    )
    op.create_table('responsibility_skill_mappings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('responsibility_id', sa.UUID(), nullable=False),
    sa.Column('justification', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['responsibility_id'], ['work_responsibilities.id'], name=op.f('fk_responsibility_skill_mappings_responsibility_id_work_responsibilities')),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name=op.f('fk_responsibility_skill_mappings_skill_id_skills')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_responsibility_skill_mappings_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'skill_id', 'responsibility_id', name=op.f('pk_responsibility_skill_mappings')),
    sa.UniqueConstraint('user_id', 'skill_id', 'responsibility_id', name='uq_responsibility_skill_mapping')
    )
    op.create_table('task_skill_mappings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('justification', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name=op.f('fk_task_skill_mappings_skill_id_skills')),
    sa.ForeignKeyConstraint(['task_id'], ['project_tasks.id'], name=op.f('fk_task_skill_mappings_task_id_project_tasks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_task_skill_mappings_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'skill_id', 'task_id', name=op.f('pk_task_skill_mappings')),
    sa.UniqueConstraint('user_id', 'skill_id', 'task_id', name='uq_task_skill_mapping')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_skill_mappings')
    op.drop_table('responsibility_skill_mappings')
    op.drop_table('work_responsibilities')
    op.drop_table('project_tasks')
    op.drop_table('work_experiences')
    op.drop_table('user_skills')
    op.drop_table('projects')
    op.drop_table('educations')
    op.drop_table('users')
    op.drop_table('skills')
    # ### end Alembic commands ###
