"""add output resume models

Revision ID: 098984b5be5e
Revises: e0ca792eaffe
Create Date: 2025-08-29 21:34:57.230405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '098984b5be5e'
down_revision: Union[str, Sequence[str], None] = 'e0ca792eaffe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('position_title', sa.String(), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=False),
    sa.Column('job_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_jobs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_jobs'))
    )
    op.create_table('resume_educations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('degree', sa.String(), nullable=False),
    sa.Column('field_of_study', sa.String(), nullable=False),
    sa.Column('focus_area', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('max_gpa', sa.Float(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resume_educations_job_id_jobs')),
    sa.ForeignKeyConstraint(['parent_id'], ['resume_educations.id'], name=op.f('fk_resume_educations_parent_id_resume_educations')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resume_educations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resume_educations')),
    sa.UniqueConstraint('user_id', 'job_id', name='uq_resume_education_user_job')
    )
    op.create_table('resume_metadata',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('linkedin_url', sa.String(), nullable=True),
    sa.Column('github_url', sa.String(), nullable=True),
    sa.Column('portfolio_website', sa.String(), nullable=True),
    sa.Column('custom_styles', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resume_metadata_job_id_jobs')),
    sa.ForeignKeyConstraint(['parent_id'], ['resume_metadata.id'], name=op.f('fk_resume_metadata_parent_id_resume_metadata')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resume_metadata_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resume_metadata')),
    sa.UniqueConstraint('user_id', 'job_id', name='uq_resume_metadata_user_job')
    )
    op.create_table('resume_projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resume_projects_job_id_jobs')),
    sa.ForeignKeyConstraint(['parent_id'], ['resume_projects.id'], name=op.f('fk_resume_projects_parent_id_resume_projects')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resume_projects_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resume_projects')),
    sa.UniqueConstraint('user_id', 'job_id', name='uq_resume_project_user_job')
    )
    op.create_table('resume_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.Column('skill_category', sa.String(), nullable=True),
    sa.Column('proficiency_level', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resume_skills_job_id_jobs')),
    sa.ForeignKeyConstraint(['parent_id'], ['resume_skills.id'], name=op.f('fk_resume_skills_parent_id_resume_skills')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resume_skills_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resume_skills')),
    sa.UniqueConstraint('user_id', 'job_id', name='uq_resume_skill_user_job')
    )
    op.create_table('resume_work_experiences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('employment_type', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resume_work_experiences_job_id_jobs')),
    sa.ForeignKeyConstraint(['parent_id'], ['resume_work_experiences.id'], name=op.f('fk_resume_work_experiences_parent_id_resume_work_experiences')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resume_work_experiences_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resume_work_experiences')),
    sa.UniqueConstraint('user_id', 'job_id', name='uq_resume_work_experience_user_job')
    )
    op.create_table('resumes',
    sa.Column('version', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('parent_version', sa.UUID(), nullable=True),
    sa.Column('metadata_id', sa.UUID(), nullable=False),
    sa.Column('pinned_education_ids', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.Column('pinned_experience_ids', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.Column('pinned_project_ids', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.Column('pinned_skill_ids', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_resumes_job_id_jobs')),
    sa.ForeignKeyConstraint(['metadata_id'], ['resume_metadata.id'], name=op.f('fk_resumes_metadata_id_resume_metadata')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_resumes_user_id_users')),
    sa.PrimaryKeyConstraint('version', 'user_id', 'job_id', name=op.f('pk_resumes'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resumes')
    op.drop_table('resume_work_experiences')
    op.drop_table('resume_skills')
    op.drop_table('resume_projects')
    op.drop_table('resume_metadata')
    op.drop_table('resume_educations')
    op.drop_table('jobs')
    # ### end Alembic commands ###
