# Region that hosts every resource. Choose the one closest to your users to minimise latency.
aws_region = "ap-southeast-1"

# Short environment label that flows into resource names and tags (dev/staging/prod, etc.).
environment = "dev"

# Prefix keeps resource names unique when multiple projects share an AWS account.
name_prefix = "resume-genius"

# Availability zones that the VPC subnets will occupy for redundancy.
availability_zones = ["ap-southeast-1a", "ap-southeast-1b"]

# Database admin credentials. Replace with production-grade secrets before applying.
rds_master_username = "litellm"
rds_master_password = "REPLACE_ME"

# Backend database configuration. Terraform will generate a strong password and store it in
# AWS Secrets Manager at the secret name provided here.
backend_rds_master_username = "backend"
backend_rds_database_name   = "resume_genius"
backend_rds_secret_name     = "resume-genius/backend/postgres"

# Optional: publish and consume a friendlier hostname for the backend database. Uncomment
# and adjust these values if you manage the domain in Route 53 or another DNS provider.
# backend_rds_custom_hostname   = "dev-db.resumegenius.parkourlabs.io"
# backend_rds_dns_zone_name     = "resumegenius.parkourlabs.io."
# backend_rds_dns_zone_private  = true
# backend_rds_dns_record_name   = "dev-db"
# backend_rds_dns_record_ttl    = 300

# Bastion used for SSM port forwarding into the backend database
# backend_db_bastion_enabled        = true
# backend_db_bastion_instance_type  = "t4g.micro"
# backend_db_bastion_root_volume_size = 16
# backend_db_bastion_key_name       = "your-keypair"  # optional for SSH access
# backend_db_bastion_ingress_cidrs  = ["203.0.113.42/32"]

# Public Resume Genius development database credentials and allowed networks.
resume_genius_backend_rds_master_username = "resume_genius"
resume_genius_backend_rds_secret_name     = "resume-genius-dev-backend-db"
resume_genius_backend_rds_allowed_cidrs  = ["0.0.0.0/0"]

# Container image to deploy. Update the tag when shipping new application versions.
litellm_container_image = "084828573819.dkr.ecr.ap-southeast-1.amazonaws.com/litellm:latest"

# Uncomment to enable ECS Exec access to LiteLLM tasks (requires network access to SSM endpoints).
# litellm_enable_execute_command = true

# Environment variable -> secret ARN map. ECS injects secrets at runtime without exposing
# plaintext in logs or state. Keep this in sync with the secrets you manage in AWS.
litellm_secrets = {
  LITELLM_MASTER_KEY       = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/LITELLM_MASTER_KEY"
  LITELLM_SALT_KEY         = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/LITELLM_SALT_KEY"
  DATABASE_URL             = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/DATABASE_URL"
  OPENAI_API_KEY           = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/OPENAI_API_KEY"
  ANTHROPIC_API_KEY        = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/ANTHROPIC_API_KEY"
  GOOGLE_API_KEY           = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/GOOGLE_API_KEY"
  GROQ_API_KEY             = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/GROQ_API_KEY"
  PERPLEXITYAI_API_KEY     = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/PERPLEXITYAI_API_KEY"
  XAI_API_KEY              = "arn:aws:secretsmanager:ap-southeast-1:084828573819:secret:litellm/XAI_API_KEY"
}

# Plain-text environment variables passed to the container. Use this for non-sensitive
# configuration such as feature flags or human-friendly metadata.
litellm_environment = {
  LITELLM_DATABASE_NAME = "litellm"
}

# TLS termination (optional)
# alb_https_certificate_arn = "arn:aws:acm:ap-southeast-1:084828573819:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
# alb_redirect_http_to_https = true
