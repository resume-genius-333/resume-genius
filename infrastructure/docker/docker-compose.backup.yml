# Docker Compose configuration for Langfuse and LiteLLM

services:
  # LiteLLM Proxy Service
  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: litellm-proxy
    ports:
      - "4000:4000"
    volumes:
      - ./litellm-config.yaml:/app/config.yaml
    command: [ "--config", "/app/config.yaml", "--port", "4000", "--num_workers", "8" ]
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY:-sk-1234}  # CHANGEME
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/litellm  # Optional: for persistent storage
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - langfuse-network
    restart: unless-stopped

  # Langfuse Services
  langfuse-worker:
    image: langfuse/langfuse:latest
    container_name: langfuse-worker
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: ["node", "dist/src/server/background/worker.js"]
    environment:
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL:-user@example.com}  # CHANGEME
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD:-password}  # CHANGEME
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME:-Admin}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_ID:-my-org}  # CHANGEME
      - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_INIT_ORG_NAME:-My Org}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID:-my-project}  # CHANGEME
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME:-My Project}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-pk-lf-123}  # CHANGEME
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${LANGFUSE_INIT_PROJECT_SECRET_KEY:-sk-lf-123}  # CHANGEME
      - SALT=${SALT:-salt}  # CHANGEME
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-0000000000000000000000000000000000000000000000000000000000000000}  # CHANGEME
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-mysecret}  # CHANGEME
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/langfuse
      - REDIS_CONNECTION_STRING=redis://redis:6379
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-clickhouse}  # CHANGEME
      - CLICKHOUSE_DATABASE=default
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000
      - CLICKHOUSE_CLUSTER_ENABLED=false
      - CLICKHOUSE_MIGRATION_CLUSTER_DISABLED=true
      - LANGFUSE_S3_MEDIA_UPLOAD_ENABLED=true
      - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_MEDIA_UPLOAD_REGION=us-east-1
      - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=minio
      - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD:-minio123}  # CHANGEME
      - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
      - HOSTNAME=0.0.0.0
      - NODE_ENV=production
      - NEXT_RUNTIME=nodejs
      - LANGFUSE_AUTO_POSTGRES_MIGRATION_DISABLED=false
      - LANGFUSE_AUTO_CLICKHOUSE_MIGRATION_DISABLED=false
    networks:
      - langfuse-network
    restart: unless-stopped

  langfuse-web:
    image: langfuse/langfuse:latest
    container_name: langfuse-web
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL:-user@example.com}  # CHANGEME
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD:-password}  # CHANGEME
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME:-Admin}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_ID:-my-org}  # CHANGEME
      - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_INIT_ORG_NAME:-My Org}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID:-my-project}  # CHANGEME
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME:-My Project}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-pk-lf-123}  # CHANGEME
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${LANGFUSE_INIT_PROJECT_SECRET_KEY:-sk-lf-123}  # CHANGEME
      - SALT=${SALT:-salt}  # CHANGEME
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-0000000000000000000000000000000000000000000000000000000000000000}  # CHANGEME
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-mysecret}  # CHANGEME
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/langfuse
      - REDIS_CONNECTION_STRING=redis://redis:6379
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-clickhouse}  # CHANGEME
      - CLICKHOUSE_DATABASE=default
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000
      - CLICKHOUSE_CLUSTER_ENABLED=false
      - CLICKHOUSE_MIGRATION_CLUSTER_DISABLED=true
      - LANGFUSE_S3_MEDIA_UPLOAD_ENABLED=true
      - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_MEDIA_UPLOAD_REGION=us-east-1
      - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=minio
      - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD:-minio123}  # CHANGEME
      - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
      - HOSTNAME=0.0.0.0
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXT_RUNTIME=nodejs
    networks:
      - langfuse-network
    restart: unless-stopped

  # Database Services
  postgres:
    image: postgres:16-alpine
    container_name: langfuse-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}  # CHANGEME
      - POSTGRES_DB=postgres
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - langfuse-network
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:24.7.3.42-alpine
    container_name: langfuse-clickhouse
    hostname: clickhouse
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-clickhouse}  # CHANGEME
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_DB=default
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    # ports:
    #   - "127.0.0.1:8123:8123"
    #   - "127.0.0.1:9000:9000"
    healthcheck:
      test: ["CMD", "clickhouse-client", "--password", "${CLICKHOUSE_PASSWORD:-clickhouse}", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - langfuse-network
    restart: unless-stopped

  redis:
    image: valkey/valkey:7-alpine
    container_name: langfuse-redis
    # ports:
    #   - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - langfuse-network
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-04T14-25-45Z
    container_name: langfuse-minio
    hostname: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio123}  # CHANGEME
      - MINIO_DOMAIN=minio
    # ports:
    #   - "127.0.0.1:9000:9000"
    #   - "127.0.0.1:9001:9001"
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - langfuse-network
    restart: unless-stopped

  # MinIO initialization container
  createbuckets:
    image: minio/mc
    container_name: langfuse-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c '
      /usr/bin/mc alias set langfuseminio http://minio:9000 minio ${MINIO_ROOT_PASSWORD:-minio123};
      if ! /usr/bin/mc ls langfuseminio/langfuse 2>/dev/null; then
        /usr/bin/mc mb langfuseminio/langfuse;
        /usr/bin/mc anonymous set public langfuseminio/langfuse;
      else
        echo "Bucket langfuse already exists";
      fi
      '
    networks:
      - langfuse-network

networks:
  langfuse-network:
    driver: bridge

volumes:
  langfuse_postgres_data:
  langfuse_clickhouse_data:
  langfuse_clickhouse_logs:
  langfuse_minio_data: